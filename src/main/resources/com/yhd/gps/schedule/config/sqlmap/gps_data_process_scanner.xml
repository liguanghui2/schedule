<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="DataProcessScannerVo">
	<typeAlias type="com.yhd.gps.schedule.vo.DataProcessScannerVo" alias="dataProcessScannerVo"/>

	<resultMap id="dataProcessScannerVo" class="dataProcessScannerVo">
		<result property="id" column="id"/>
		<result property="businessType" column="business_type"/>
		<result property="refId" column="ref_id"/>
		<result property="startTime" column="start_time"/>
		<result property="endTime" column="end_time"/>
		<result property="isDeal" column="is_deal"/>
		<result property="nextProcessTime" column="next_process_time"/>
		<result property="shardingIndex" column="sharding_index"/>
	</resultMap>

	<!-- 分页查询数据处理扫描表 -->
	<select id="getDataProcessScanner" parameterClass="map" resultMap="dataProcessScannerVo">
		/* getDataProcessScanner */
		select 
			   id, business_type, ref_id, start_time, end_time, is_deal, next_process_time, sharding_index
		  from data_process_scanner
		 where business_type = #businessType#
		   and sharding_index = #shardingIndex#
		   and next_process_time &lt;= now() 
		 limit #pageSize#
	</select>
	
	<!--更新data_process_scanner下次处理时间 -->
	<update id="batchUpdateDataProcessScannerNextProcessTimeByIds" parameterClass="map">
		/* batchUpdateDataProcessScannerNextProcessTimeByIds */
		update data_process_scanner 
		   set update_time = now(),
			   next_process_time = #nextProcessTime#
		 where id in
		<iterate prepend=" " property="ids" open="(" close=")" conjunction=",">
			#ids[]#
        </iterate>
	</update>
	
	<!-- 物理删除data_process_scanner -->
	<delete id="batchDeleteDataProcessScannerByIds" parameterClass="map">
		/* batchDeleteDataProcessScannerByIds */
		delete from data_process_scanner
		where id in
		<iterate prepend=" " property="ids" open="(" close=")" conjunction=",">
			#ids[]#
        </iterate>
	</delete>

	<!-- 新增扫描表记录 -->
	<insert id="insertDataProcessScanner" parameterClass="dataProcessScannerVo">
    	insert into data_process_scanner 
    		(business_type, ref_id,	start_time, end_time, is_deal, next_process_time, sharding_index, create_time, update_time)
        values
        	(#businessType#, #refId#, #startTime#, #endTime#, #isDeal#, #nextProcessTime#, #shardingIndex#, now(), now())
		<selectKey resultClass="long" keyProperty="id" type="post">
            <![CDATA[SELECT LAST_INSERT_ID() AS ID ]]>
        </selectKey>
    </insert>
    
    <!-- 根据业务类型和refId查数据处理扫描表 -->
	<select id="getDataProcessScannerByRefId" parameterClass="map" resultMap="dataProcessScannerVo">
		/* getDataProcessScannerByRefId */
		select 
			   id, business_type, ref_id, start_time, end_time, is_deal, next_process_time, sharding_index
		  from data_process_scanner
		 where business_type = #businessType#
		   and ref_id = #refId#
	</select>
	
	<!-- 批量根据业务类型和refId查数据处理扫描表 -->
	<select id="batchGetDataProcessScannerByRefIds" parameterClass="map" resultMap="dataProcessScannerVo">
		/* batchGetDataProcessScannerByRefIds */
		select 
			   id, business_type, ref_id, start_time, end_time, is_deal, next_process_time, sharding_index
		  from data_process_scanner
		 where business_type = #businessType#
		   and ref_id in
		   <iterate prepend=" " property="refIds" open="(" close=")" conjunction=",">
				#refIds[]#
           </iterate>
	</select>

</sqlMap>
DROP TABLE PM_PRICE IF EXISTS;
CREATE TABLE PM_PRICE
(
  ID                         BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  PRODUCT_ID                 BIGINT DEFAULT NULL,
  MERCHANT_ID                BIGINT DEFAULT NULL,
  IS_PROMOTE                 INTEGER,
  PRODUCT_PROM_NON_MEM_PRICE DECIMAL(11, 2),
  PRODUCT_NON_MEMBER_PRICE   DECIMAL(11, 2),
  IN_PRICE                   DECIMAL(11, 2),
  PRODUCT_PROM_START_DATE    DATE,
  PRODUCT_PROM_END_DATE      DATE,
  EARNEST                    DECIMAL(11, 2),
  SPECIAL_PRICE_LIMIT_NUMBER INTEGER,
  USER_PRICE_LIMIT_NUMBER    INTEGER,
  CAN_VIP_DISCOUNT           INTEGER,
  UPDATE_TIME                DATE,
  PM_INFO_ID                 BIGINT DEFAULT NULL,
  SHARE_COST                 DECIMAL(11, 2),
  CREATE_TIME                DATE DEFAULT NULL,
  MINIMUM_SELLING_PRICE      DECIMAL(11, 2),
  ROWNUM                     BIGINT DEFAULT NULL,
  HAS_EXT_PRICE_TYPE		 INTEGER,
  POST_TAX_RATE              DECIMAL(9, 7) default 0,
  IS_BIND_PACKAGE            INTEGER,
  PER_PACK_NUM               INTEGER,
  SUB_PM_INFO_UNIT           VARCHAR(10),
  IS_LOCK_PRICE              INTEGER,
  COST_PRICE                 DECIMAL(13, 2),
  PRIMARY KEY (ID)
);

DROP TABLE PRODUCT_PROM_RULE IF EXISTS;
CREATE TABLE PRODUCT_PROM_RULE
(
  ID                         BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  PRODUCT_ID                 BIGINT DEFAULT NULL,
  IS_PROMOTION               INTEGER,
  SPECIAL_PRICE_LIMIT_NUMBER INTEGER,
  PRODUCT_PROM_NON_MEM_PRICE DECIMAL(11, 2),
  PRODUCT_PROM_START_DATE    DATE DEFAULT null,
  PRODUCT_PROM_END_DATE      DATE DEFAULT null,
  CREATE_TIME                DATE DEFAULT null,
  USER_PRICE_LIMIT_NUMBER    INTEGER,
  MERCHANT_ID                BIGINT DEFAULT NULL,
  PROM_NAME                  VARCHAR(100),
  PAY_NUM                    INTEGER,
  SOLD_NUM                   INTEGER,
  RESTRICT_TYPE              INTEGER,
  UPDATE_TIME                DATE,
  IS_VISUAL_SERIAL           INTEGER,
  PARENT_RULE_ID             BIGINT DEFAULT NULL,
  RULE_TYPE                  INTEGER,
  DISCOUNT                   DECIMAL(11, 2),
  PM_INFO_ID                 BIGINT DEFAULT NULL,
  MUTEX_PROMOTION            INTEGER DEFAULT 0,
  LOCK_STATUS                INTEGER DEFAULT 0,
  RULE_STATUS                INTEGER DEFAULT 1,
  BACK_OPERATOR_ID           BIGINT DEFAULT NULL,
  MIN_COUNT					 INTEGER DEFAULT 0,
  CHANNEL_ID				 BIGINT DEFAULT 1,
  PRICE_LOCK_TYPE            INTEGER DEFAULT NULL,
  PRICE_CHANGE_REMIND        INTEGER DEFAULT NULL,
  SHOPPING_BAG_SOLD_NUMBER   INTEGER DEFAULT 0,
  ACTIVITY_ID				 BIGINT DEFAULT 0,
  ROWNUM					 BIGINT DEFAULT 0,
  IS_QUEUING				 INTEGER DEFAULT 0,
  BUSINESS_TAG_ID            BIGINT DEFAULT NULL,
  ORDER_PRICE_LIMIT_NUMBER   BIGINT DEFAULT 0,
  SOLD_DATE   				 DATE,
  PRIMARY KEY (ID)
);

CREATE SEQUENCE SEQ_PRODUCT_PROM_RULE_ID
  AS BIGINT
    START WITH 1
    INCREMENT BY 0;

DROP TABLE IF EXISTS PM_BINDING_PRICE;
CREATE TABLE PM_BINDING_PRICE(
     id          BIGINT GENERATED BY DEFAULT AS IDENTITY (
     START WITH 1 ) NOT NULL,
     main_pm_info_id      bigint,
     main_product_id      bigint,
     main_merchant_id     bigint,
     sub_pm_info_id       bigint,
     sub_product_id       bigint,
     sub_merchant_id      bigint,
     sub_binding_num      int,
     sub_binding_value    DECIMAL(13, 2) DEFAULT NULL,
     sub_binding_value_type int,
     binding_type         int,
     series_product_id    bigint,
     ref_main_id          bigint,
     ref_sub_id           bigint,
     channel_id           bigint,
     start_time           datetime,
     end_time             datetime,
     enabled              int,
     create_time          datetime,
     update_time          datetime,
     create_operator_id   bigint,
     create_operator_name varchar(50),
     update_operator_id   bigint,
     update_operator_name varchar(50),
     primary key (id)
);

DROP TABLE IF EXISTS PM_AREA_PRICE;
CREATE TABLE PM_AREA_PRICE (
   id bigint GENERATED BY DEFAULT AS IDENTITY (
     START WITH 1 ) NOT NULL,
   pm_info_id bigint ,
   province_id bigint ,
   city_id bigint ,
   county_id bigint ,
   area_id bigint ,
   cover_level int ,
   market_price DECIMAL(11,2) ,
   base_price decimal(11,2) ,
   ref_price_id bigint ,
   ref_price_id_type bigint,
   start_time datetime,
   end_time datetime,
   enabled int,
   channel_id bigint,
   create_time datetime,
   update_time datetime,
   create_operator_id bigint ,
   create_operator_name varchar(50),
   update_operator_id bigint,
   update_operator_name varchar(50),
   PRIMARY KEY (id)
);
 
DROP TABLE BS_MISC_CONFIG IF EXISTS;
CREATE TABLE BS_MISC_CONFIG (
  ID          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  ITEM_KEY    VARCHAR(100) DEFAULT NULL,
  ITEM_VALUE  VARCHAR(500) DEFAULT NULL,
  NOTE        VARCHAR(500) DEFAULT NULL,
  ENABLED     INTEGER,
  CREATE_TIME DATETIME DEFAULT NULL,
  UPDATE_TIME DATETIME DEFAULT NULL,
  IS_DELETED  INTEGER,
  PRIMARY KEY (ID)
);

DROP TABLE BS_PRICE_RULE_TYPE IF EXISTS;
CREATE TABLE BS_PRICE_RULE_TYPE (
  ID               BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 )           NOT NULL,
  RULE_TYPE_CODE   BIGINT DEFAULT NULL,
  RULE_TYPE_NAME   VARCHAR(100),
  RULE_TYPE_WEIGHT INTEGER NOT NULL,
  CREATE_TIME      DATETIME DEFAULT NULL,
  UPDATE_TIME      DATETIME DEFAULT NULL,
  PRIMARY KEY (ID)
);

DROP TABLE GPS_PRODUCT IF EXISTS;
create table GPS_PRODUCT
(
  ID                   BIGINT not null,
  PRODUCT_CODE         VARCHAR(10),
  PRODUCT_CNAME        VARCHAR(1000) not null,
  PRODUCT_ENAME        VARCHAR(200),
  PRODUCT_SALE_TYPE    smallint default 0,
  PRODUCT_LIST_PRICE   DECIMAL(11,2) default 0 not null,
  PRODUCT_TYPE         smallint default 0 not null,
  CATEGORY_ID          BIGINT not null,
  CATEGORY_SEARCH_NAME VARCHAR(220),
  IS_DELETED           smallint default 0,
  CREATE_TIME          datetime,
  UPDATE_TIME          datetime,
  PRIMARY KEY (ID)
);


DROP TABLE BS_PM_AVG_PRICE IF EXISTS;
CREATE TABLE BS_PM_AVG_PRICE (
  ID          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  PM_INFO_ID  BIGINT DEFAULT NULL,
  PRODUCT_ID  BIGINT DEFAULT NULL,
  MERCHANT_ID BIGINT DEFAULT NULL,
  AVG_PRICE   DECIMAL(11, 2) DEFAULT NULL,
  CREATE_TIME DATE,
  UPDATE_TIME DATE,
  PRIMARY KEY (ID)
);

DROP TABLE BS_PM_PRICE_HISTORY IF EXISTS;
CREATE TABLE BS_PM_PRICE_HISTORY (
  ID                       BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 )                     NOT NULL,
  CREATE_TIME              DATE DEFAULT NULL,
  PM_INFO_ID               BIGINT DEFAULT NULL,
  PRODUCT_ID               BIGINT DEFAULT NULL,
  MERCHANT_ID              BIGINT DEFAULT NULL,
  PRODUCT_NON_MEMBER_PRICE DECIMAL(11, 2),
  UPDATE_TIME              DATE DEFAULT NULL,
  PRIMARY KEY (ID)
);

DROP TABLE PM_LEVEL_PRICE IF EXISTS;
CREATE TABLE PM_LEVEL_PRICE (
  id                   BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  pm_info_id           BIGINT DEFAULT NULL,
  product_id           BIGINT DEFAULT NULL,
  merchant_id          BIGINT DEFAULT NULL,
  level_type_id        BIGINT DEFAULT NULL,
  level_type           INTEGER DEFAULT NULL,
  level1_value         DECIMAL(13, 2) DEFAULT NULL,
  level2_value         DECIMAL(13, 2) DEFAULT NULL,
  level3_value         DECIMAL(13, 2) DEFAULT NULL,
  level4_value         DECIMAL(13, 2) DEFAULT NULL,
  level5_value         DECIMAL(13, 2) DEFAULT NULL,
  level6_value         DECIMAL(13, 2) DEFAULT NULL,
  level_value_type     INTEGER DEFAULT NULL,
  start_time           DATETIME DEFAULT NULL,
  end_time             DATETIME DEFAULT NULL,
  parent_price_id      BIGINT DEFAULT NULL,
  parent_price_id_type INTEGER DEFAULT NULL,
  channel_id           BIGINT DEFAULT NULL,
  mutex_other          INTEGER DEFAULT NULL,
  enabled              INTEGER DEFAULT NULL,
  create_time          DATETIME DEFAULT NULL,
  create_operator_id   BIGINT DEFAULT NULL,
  create_operator_name VARCHAR(50) DEFAULT NULL,
  update_operator_id   BIGINT DEFAULT NULL,
  update_operator_name VARCHAR(50) DEFAULT NULL,
  update_time          DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE member IF EXISTS;
CREATE TABLE member (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  grade      INTEGER DEFAULT NULL,
  end_user_id BIGINT DEFAULT NULL,
  create_time DATETIME DEFAULT NULL,
  update_time DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE BS_USER_BADGE IF EXISTS;
CREATE TABLE BS_USER_BADGE (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  ref_id      BIGINT DEFAULT NULL,
  end_user_id BIGINT DEFAULT NULL,
  badge_id    INTEGER DEFAULT NULL,
  badge_type  INTEGER DEFAULT NULL,
  badge_level INTEGER DEFAULT NULL,
  enabled     INTEGER DEFAULT NULL,
  create_time DATETIME DEFAULT NULL,
  update_time DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE user_badge IF EXISTS;
CREATE TABLE user_badge (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  end_user_id BIGINT DEFAULT NULL,
  badge_id    BIGINT DEFAULT NULL,
  badge_type  INTEGER DEFAULT NULL,
  badge_level INTEGER DEFAULT NULL,
  badge_level_id    BIGINT DEFAULT NULL,
  status     INTEGER DEFAULT NULL,
  create_time DATETIME DEFAULT NULL,
  update_time DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE badge_level IF EXISTS;
CREATE TABLE badge_level (
  id          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  level      INTEGER DEFAULT NULL,
  create_time DATETIME DEFAULT NULL,
  update_time DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
);

DROP TABLE STOCK_YHD_AVG_PRICE IF EXISTS;
CREATE TABLE STOCK_YHD_AVG_PRICE (
   id bigint GENERATED BY DEFAULT AS IDENTITY (
     START WITH 1 ) NOT NULL,
   avg_price_type int,
   product_id bigint,
   merchant_id bigint,
   stock_num_trade bigint,
   stock_num_agency bigint,
   stock_num_sby bigint,
   stock_amount_trade decimal(20,7),
   stock_amount_agency decimal(20,7),
   stock_amount_sby decimal(20,7),
   avg_price_trade decimal(20,7),
   avg_price_agency decimal(20,7),
   avg_price_sby decimal(20,7)
 );
 
DROP TABLE PM_PRICE_CHANGE_MSG IF EXISTS;
CREATE TABLE PM_PRICE_CHANGE_MSG(
    ID bigint GENERATED BY DEFAULT AS IDENTITY (
         START WITH 1 ) NOT NULL,
    PM_INFO_ID           bigint,
    MSG_PRICE_ID         bigint,
    MSG_TYPE             int,
    MSG_CONTENT          varchar(200),
    MSG_STATUS           int,
    MSG_TASK_IP          varchar(30),
    MSG_TASK_TIME        datetime,
    ACTUAL_SEND_TIME     datetime,
    ACTUAL_SEND_IP       varchar(30),
    CREATE_IP            varchar(30),
    CREATE_TIME          datetime,
    UPDATE_IP            varchar(30),
    UPDATE_TIME          datetime,
    sharding_index		int,
    PRIMARY KEY (ID)
 );
 
DROP TABLE PROMOTION_PRICE_CHANGE_MSG IF EXISTS;
CREATE TABLE PROMOTION_PRICE_CHANGE_MSG(
    ID bigint GENERATED BY DEFAULT AS IDENTITY (
         START WITH 1 ) NOT NULL,
    PM_INFO_ID           bigint,
    PROMOTION_ID         bigint,
    MSG_CONTENT          varchar(200),
    MSG_STATUS           int,
    MSG_TASK_IP          varchar(30),
    MSG_TASK_TIME        datetime,
    ACTUAL_SEND_TIME     datetime,
    ACTUAL_SEND_IP       varchar(30),
    CREATE_IP            varchar(30),
    CREATE_TIME          datetime,
    UPDATE_IP            varchar(30),
    UPDATE_TIME          datetime,
    sharding_index		int,
    PRIMARY KEY (ID)
 );
 
CREATE TABLE VD_PM_IN_PRICE(
   ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 ) NOT NULL,
   PM_INFO_ID BIGINT,
   IN_PRICE decimal(11,2),
   PRODUCT_ID BIGINT,
   UPDATE_TIME datetime,
   CREATE_TIME datetime,
   UPDATE_OPERATOR_ID BIGINT,
   CREATE_OPERATOR_ID BIGINT,
   primary key(ID)
 );
 
 create table VD_PM_PRICE(
   ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 ) NOT NULL,
   VD_PM_INFO_ID bigint not null,
   PM_INFO_ID bigint not null,
   PRODUCT_ID bigint not null,
   SOURCE smallint not null,
   SALE_PRICE decimal(11,2),
   IN_PRICE decimal(11,2),
   UPDATE_TIME datetime,
   CREATE_TIME datetime,
   UPDATE_OPERATOR_ID bigint,
   CREATE_OPERATOR_ID bigint,
   PRIMARY KEY (ID)
)

create table VD_PM_PRICE_RULE(
   ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1 ) NOT NULL,
   VD_PM_INFO_ID bigint not null,
   PM_INFO_ID bigint not null,
   RULE_TYPE smallint,
   CHANGE_JUDGE varchar(200),
   CHANGE_METHOD varchar(200),
   UPDATE_TIME datetime,
   CREATE_TIME datetime,
   UPDATE_USER_ID bigint,
   CREATE_USER_ID bigint,
   PRIMARY KEY (ID)
);

create table VD_CPS_CATEGORY_COMMISSION(
ID bigint GENERATED BY DEFAULT AS IDENTITY (
        START WITH 1 ) NOT NULL,
CATEGORY_ID bigint,
PREV_COMMISSION decimal(11,2),
CURR_COMMISSION decimal(11,2),
PREV_YHD_COMMISSION decimal(11,2),
CURR_YHD_COMMISSION decimal(11,2),
VERSION_ID bigint,
UPDATE_TIME datetime,
CREATE_TIME datetime
);

create table VD_CPS_MERC_CATEGORY_COMMISSION_SNAP(
ID bigint GENERATED BY DEFAULT AS IDENTITY (
        START WITH 1 ) NOT NULL,
MERCHANT_ID bigint,
CATEGORY_ID bigint,
COMMISSION  decimal(11,2),
VERSION_ID bigint,
UPDATE_TIME datetime,
CREATE_TIME datetime
);

create table VD_CPS_PM_COMMISSION_SNAP (
ID  bigint GENERATED BY DEFAULT AS IDENTITY (
        START WITH 1 ) NOT NULL,
PM_INFO_ID bigint,
COMMISSION decimal(11,2),
VERSION_ID bigint,
UPDATE_TIME datetime,
CREATE_TIME datetime,
);

CREATE TABLE GPS_PROMOTION(
	id bigint GENERATED BY DEFAULT AS IDENTITY (
	        START WITH 1 ) NOT NULL,
	promotion_id bigint,
	product_id bigint,
	merchant_id bigint,
	pm_info_id bigint,
	pgm_info_id	bigint,
	promotion_price decimal(11,2),
	promotion_point bigint,
	start_time datetime,
	end_time datetime,
	promotion_type tinyint,
	limit_type tinyint,
	limit_stock bigint,
	sold_num bigint,
	sold_date datetime,
	status tinyint,
	business_tag_id bigint,
	operator_id bigint,
	operate_reason varchar(200),
	create_time datetime,
	update_time datetime
);

DROP TABLE PROMOTION_PM_POOL IF EXISTS;
CREATE TABLE PROMOTION_PM_POOL (
  ID          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  PM_INFO_ID BIGINT not null , 
  PRODUCT_CODE VARCHAR(10) NOT NULL , 
  MARKING_TAG_TIME DATETIME , 
  TAG_TYPE TINYINT NOT NULL , 
  SALES BIGINT NOT NULL , 
  IS_DELETE TINYINT DEFAULT 0, 
  PROMOTION TINYINT, 
  LOCK_PRICE_START_TIME DATETIME, 
  LOCK_PRICE_END_TIME DATETIME, 
  OPERATOR_ID BIGINT, 
  CREATE_TIME DATETIME, 
  PRIMARY KEY (ID)
);

DROP TABLE PROMOTION_PM_SALES IF EXISTS;
CREATE TABLE PROMOTION_PM_SALES (
  ID          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  PM_INFO_ID BIGINT not null , 
  SALES BIGINT NOT NULL , 
  SALES_TIME DATETIME,
  PRIMARY KEY (ID)
);



DROP TABLE HISTORY_PRICE_CHANGE_MSG IF EXISTS;
CREATE TABLE HISTORY_PRICE_CHANGE_MSG (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY (
  	START WITH 1 ) NOT NULL,
   product_id BIGINT,
   pm_info_id BIGINT,
   merchant_id BIGINT,
   channel_id BIGINT,
   price_id BIGINT,
   price decimal(18,6),
   promotion_id BIGINT,
   prom_name varchar(1000),
   prom_type int,
   start_time datetime,
   end_time datetime,
   promotion_update_time datetime,
   create_time datetime,
   operator_id BIGINT,
   rule_type int,
   price_change_msg_type int,
   is_deal int,
   sharding_index int,
   province_id BIGINT,
   city_id BIGINT,
   county_id BIGINT,
   PRIMARY KEY (id)
);
 
DROP TABLE sharding_index IF EXISTS;
CREATE TABLE sharding_index (
   id BIGINT GENERATED BY DEFAULT AS IDENTITY (
   START WITH 1 ) NOT NULL,
   table_name varchar(100),
   sharding_index int,
   is_valid int,
   ip varchar(200),
   is_crash int,
   note varchar(500),
   update_time datetime,
   PRIMARY KEY (id)
);

DROP TABLE LOCK_PRICE IF EXISTS;
CREATE TABLE LOCK_PRICE (
  ID          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  PM_INFO_ID            BIGINT  NOT NULL,
  PRODUCT_ID            BIGINT,
  MERCHANT_ID           BIGINT,
  LOCK_PRICE_START_DATE datetime,
  LOCK_PRICE_END_DATE   datetime,
  LOCK_PRICE            decimal(13,2) NOT NULL,
  REMINDER_RATIO        decimal(6,2),
  IS_DELETE             INTEGER DEFAULT 0,
  CREATE_TIME           datetime,
  UPDATE_TIME           datetime,                    
  PRIMARY KEY (ID)
);

DROP TABLE DATA_PROCESS_SCANNER IF EXISTS;
CREATE TABLE DATA_PROCESS_SCANNER (
  ID          BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  BUSINESS_TYPE         INT  NOT NULL,
  REF_ID            	BIGINT NOT NULL,
  START_TIME            datetime,
  END_TIME 				datetime,
  IS_DEAL   			INT DEFAULT 0 NOT NULL,
  NEXT_PROCESS_TIME     datetime,
  SHARDING_INDEX        INT NOT NULL,
  CREATE_TIME           datetime,
  UPDATE_TIME           datetime,                    
  PRIMARY KEY (ID)
);

DROP TABLE JD_BOOK_SYNC_LOG IF EXISTS;
CREATE TABLE JD_BOOK_SYNC_LOG
(
  ID                         BIGINT GENERATED BY DEFAULT AS IDENTITY (
  START WITH 1 ) NOT NULL,
  PRODUCT_ID                 BIGINT DEFAULT 0 NOT NULL,
  JD_ID                      varchar(50) DEFAULT '' NOT NULL,
  PM_INFO_ID                 BIGINT DEFAULT 0 NOT NULL,
  PRICE                      DECIMAL(11, 2),
  MARKET_PRICE               DECIMAL(11, 2),
  HOST_IP                    varchar(50),
  CREATE_TIME                datetime,
  REMARK                     varchar(50),
  PRIMARY KEY (ID)
);